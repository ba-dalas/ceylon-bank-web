{
    "pipes": [],
    "interfaces": [
        {
            "name": "Branch",
            "id": "interface-Branch-9900cb4a3a2e40897679fe3965ce38cbf40eec0a5bee7ed343e87c3f221de42779c34f1111cd7780d6cb6da6c8938fc018e8db8b605a14724a12cff4c78e1d03",
            "file": "src/app/bank-account/models/branch.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Branch{\r\n  id: string;\r\n  value: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "DdlType",
            "id": "interface-DdlType-55f81ee083e98f7bc6344726bb561eea579ae9010e065c6ec598eae1e0eb93ed5c7ee3e4d8249dea9cdae2cf739ecabdd3a01efc4065ac89060de9b303a2d6a4",
            "file": "src/app/core/models/ddl-type.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DdlType {}\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "UserType",
            "id": "interface-UserType-0a15f0a9bc61218e80aa8c59c0e508cdc2789d6918066ccbad05e305fd0a16cf5ec008ab0a0c55d54748269fbc5c8d22f67293b4d725cedfa0ff6239f345ba83",
            "file": "src/app/user/models/user-type.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DdlType } from \"src/app/core/models/ddl-type.model\";\r\n\r\n\r\nexport interface UserType extends DdlType {\r\n  id: string;\r\n  value: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": [],
            "extends": "DdlType"
        }
    ],
    "injectables": [
        {
            "name": "CustomValidatorService",
            "id": "injectable-CustomValidatorService-32c13d65641bc4b038d49fcd0679b431d6c5c3dbf634be1a4f821dcc19f159763bd286ea0e23666927ca5e680d717a86553a84453d20e022163277b20103b3cf",
            "file": "src/app/core/services/custom-validator.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "isValidNumber",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomValidatorService {\r\n\r\n  public isValidNumber(event: any): boolean {\r\n    // console.log(event.key);\r\n    // console.log(event.keyCode);\r\n\r\n    const charCode = event.keyCode;\r\n    if (charCode == 8 || charCode == 46 || (charCode >= 48 && charCode <= 57) || (charCode >= 96 && charCode <= 105)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n}\r\n",
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-ebc2f7bcd268e8f72f8301f9408b5125208d83837aad2e7e4eba502c459854a7cf938d7afe12b2c658b5582c000c0e58d7211e95043b9dba0ecbdf0aa564f506",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'ceylon-bank-web'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ceylon-bank-web';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "\n  <router-outlet></router-outlet>\n\n"
        },
        {
            "name": "LocalBankAccInfoComponent",
            "id": "component-LocalBankAccInfoComponent-6bfd9b3026c6b11f44e08b48ee50422604c7f3ecc737e058a9572e597c16d9e8a8e013e25957027abfd74e1f1b0224b9de9ab8c25e495643e48b287d77e7f4f6",
            "file": "src/app/bank-account/local-bank-acc-info/local-bank-acc-info.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-local-bank-acc-info",
            "styleUrls": [
                "./local-bank-acc-info.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./local-bank-acc-info.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "firstFormGroup",
                    "defaultValue": "this._formBuilder.group({\n    firstCtrl: ['', Validators.required],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "isLinear",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "secondFormGroup",
                    "defaultValue": "this._formBuilder.group({\n    secondCtrl: ['', Validators.required],\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Validators, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-local-bank-acc-info',\n  templateUrl: './local-bank-acc-info.component.html',\n  styleUrls: ['./local-bank-acc-info.component.scss']\n})\nexport class LocalBankAccInfoComponent {\n\n  firstFormGroup = this._formBuilder.group({\n    firstCtrl: ['', Validators.required],\n  });\n  secondFormGroup = this._formBuilder.group({\n    secondCtrl: ['', Validators.required],\n  });\n  isLinear = false;\n\n  constructor(private _formBuilder: FormBuilder) {}\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./local-bank-acc-info.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": " <div class=\"text-center py-4\">\n    <h2>Application for Corporate Bank Account Local </h2>\n </div>\n\n <div>\n  <mat-stepper [linear]=\"isLinear\" #stepper>\n    <mat-step [stepControl]=\"firstFormGroup\" label=\"Organization & Account Information\">\n    <div>\n      <app-local-bank-organization-info-shell/>\n    </div>\n\n    </mat-step>\n    <mat-step [stepControl]=\"secondFormGroup\" label=\"Attachment\">\n\n    </mat-step>\n    <mat-step>\n      <ng-template matStepLabel>Signature & Submit</ng-template>\n      <p>You are now done.</p>\n      <div>\n        <button mat-button matStepperPrevious>Back</button>\n        <button mat-button (click)=\"stepper.reset()\">Reset</button>\n      </div>\n    </mat-step>\n  </mat-stepper>\n\n </div>\n"
        },
        {
            "name": "LocalBankAccInfoShellComponent",
            "id": "component-LocalBankAccInfoShellComponent-b10279414aa43013a4173d65f9bc09ae467e6a4ee46e9a4759e32085774ab7724e6034fea53997ce00552f3f1f028312a01e4be6e704a613301b672ef5a3e071",
            "file": "src/app/bank-account/local-bank-acc-info-shell/local-bank-acc-info-shell.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-local-bank-acc-info-shell",
            "styleUrls": [
                "./local-bank-acc-info-shell.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./local-bank-acc-info-shell.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-local-bank-acc-info-shell',\n  templateUrl: './local-bank-acc-info-shell.component.html',\n  styleUrls: ['./local-bank-acc-info-shell.component.scss']\n})\nexport class LocalBankAccInfoShellComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./local-bank-acc-info-shell.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-local-bank-acc-info/>\n"
        },
        {
            "name": "LocalBankOrganizationInfoComponent",
            "id": "component-LocalBankOrganizationInfoComponent-0296acdfc252d12458e9c0217274598c12b4624e4a18c2f4c7a02b21fc95622b1cfefc7954392480c947ab3508db7c28b4ba81faa26da1620845599fc1168670",
            "file": "src/app/bank-account/local-bank-organization-info/local-bank-organization-info.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-local-bank-organization-info",
            "styleUrls": [
                "./local-bank-organization-info.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./local-bank-organization-info.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "branchList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "Branch[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "filteredBranchList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Branch[]>",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "displayBranch",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setBranchList",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Observable, debounceTime, map, startWith } from 'rxjs';\nimport { Branch } from '../models/branch.model';\nimport { autocompleteValidator } from 'src/app/core/validators/autocomplete.validator';\n\n\n@Component({\n  selector: 'app-local-bank-organization-info',\n  templateUrl: './local-bank-organization-info.component.html',\n  styleUrls: ['./local-bank-organization-info.component.scss']\n})\nexport class LocalBankOrganizationInfoComponent implements OnInit , OnChanges{\n\n  form!: FormGroup;\n  @Input() branchList! :Branch[];\n  filteredBranchList!: Observable<Branch[]>;\n\n\n  constructor(\n    private fb: FormBuilder\n    ) { }\n\n\n  ngOnInit(): void {\n\n    this.initForm();\n    // this.branchList =[\n    //   { id:'1' , value: 'Dhaka' },\n    //   { id: '2', value: 'Mymensingh' },\n\n    // ]\n\n  }\n\n  ngOnChanges():void{\n\n\n    this.initForm();\n\n\n    if (this.branchList.length > 0) {\n      this.branchId.addValidators(autocompleteValidator(this.branchList))\n      this.setBranchList()\n    }\n\n\n  }\n\n\n  initForm() {\n    this.form = this.fb.group({\n      bankName: [''],\n      branchId:[''],\n      // branchCode:[''],\n      // country:[''],\n      // district:[''],\n      // thana:['']\n    });\n\n  }\n\n  setBranchList() {\n    if (this.branchId) {\n      this.filteredBranchList = this.branchId.valueChanges.pipe(\n        startWith(''),\n        debounceTime(200),\n        map(value =>\n          this.branchList?.filter((option: Branch) => option?.value?.toLowerCase().includes(value.toString().toLowerCase())) ?? ''\n        ));\n    }\n  }\n\n  displayBranch(e: any): string {\n    return e ? e.value : '';\n  }\n\n\n\n\n\n  //\n\n  get bankName() {\n    return this.form.controls['bankName'];\n  }\n  get branchId() {\n    return this.form.controls['branchId'];\n  }\n  // get branchCode() {\n  //   return this.form.controls['branchCode'];\n  // }\n  // get country() {\n  //   return this.form.controls['country'];\n  // }\n  // get district() {\n  //   return this.form.controls['district'];\n  // }\n\n  // get thana() {\n  //   return this.form.controls['thana'];\n  // }\n\n\n}\n\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./local-bank-organization-info.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "accessors": {
                "bankName": {
                    "name": "bankName",
                    "getSignature": {
                        "name": "bankName",
                        "type": "",
                        "returnType": "",
                        "line": 84
                    }
                },
                "branchId": {
                    "name": "branchId",
                    "getSignature": {
                        "name": "branchId",
                        "type": "",
                        "returnType": "",
                        "line": 87
                    }
                }
            },
            "templateData": "<div [formGroup]=\"form\">\n\n  <div class=\"  \">\n    <h2>General Information</h2>\n\n    <mat-divider></mat-divider>\n\n    <div class=\"grid grid-cols-2 gap-x-12 pt-6\">\n\n      <div class=\"flex items-center justify-between \">\n        <p class=\"text-lg font-medium\">Name of Bank</p>\n        <mat-form-field appearance=\"outline\" class=\"min-w-[70%]\">\n          <input aria-label=\"Bank Name\" matInput type=\"text\" placeholder=\"Enter Bank Name\" formControlName=\"bankName\">\n        </mat-form-field>\n      </div>\n\n      <div class=\"flex items-center justify-between  \">\n        <p class=\"text-lg font-medium\">Branch Name</p>\n        <mat-form-field appearance=\"outline\" class=\"min-w-[70%]\">\n          <input type=\"text\" placeholder=\"Please Select\" aria-label=\"Branch Name\" matInput formControlName=\"branchId\"\n            [matAutocomplete]=\"branchAutoComplete\">\n          <mat-autocomplete autoActiveFirstOption #branchAutoComplete=\"matAutocomplete\"\n            [displayWith]=\"displayBranch\">\n            <mat-option *ngFor=\"let element of filteredBranchList | async\" [value]=\"element\">\n              {{element.value}}\n            </mat-option>\n          </mat-autocomplete>\n        </mat-form-field>\n      </div>\n\n\n      <!-- <div class=\"flex items-center justify-between \">\n        <p class=\"text-lg font-medium\">Branch Code </p>\n        <mat-form-field appearance=\"outline\" class=\"min-w-[70%]\">\n          <mat-select aria-label=\"Branch Code\" formControlName=\"branchCode\" placeholder=\"Please Select\">\n            <mat-option *ngFor=\"let branch of branchList\" [value]=\"branch.id\">\n              {{ branch.value }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div> -->\n\n      <!-- <div class=\"flex items-center justify-between \">\n        <p class=\"text-lg font-medium\">Country </p>\n        <mat-form-field appearance=\"outline\" class=\"min-w-[70%]\">\n          <mat-select aria-label=\"Country\" formControlName=\"country\" placeholder=\"Please Select\">\n            <mat-option *ngFor=\"let branch of branchList\" [value]=\"branch.id\">\n              {{ branch.value }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div> -->\n\n\n      <!-- <div class=\"flex items-center justify-between \">\n        <p class=\"text-lg font-medium\">Name of District </p>\n        <mat-form-field appearance=\"outline\" class=\"min-w-[70%]\">\n          <mat-select aria-label=\"Name of District\" formControlName=\"district\" placeholder=\"Please Select\">\n            <mat-option *ngFor=\"let branch of branchList\" [value]=\"branch.id\">\n              {{ branch.value }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div> -->\n\n      <!-- <div class=\"flex items-center justify-between \">\n        <p class=\"text-lg font-medium\">Thana </p>\n        <mat-form-field appearance=\"outline\" class=\"min-w-[70%]\">\n          <mat-select aria-label=\"Thana\" formControlName=\"thana\" placeholder=\"Please Select\">\n            <mat-option *ngFor=\"let branch of branchList\" [value]=\"branch.id\">\n              {{ branch.value }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div> -->\n\n    </div>\n  </div>\n\n</div>\n"
        },
        {
            "name": "LocalBankOrganizationInfoShellComponent",
            "id": "component-LocalBankOrganizationInfoShellComponent-edf8431518824d752aa4b85b2fa0cef1101e534abcc5fc87d9a6befcf7d1618c42a088e65dc8064148bfd2a957e85d8ab41c9ce1db123a547a0d64dd9fed46e2",
            "file": "src/app/bank-account/local-bank-organization-info-shell/local-bank-organization-info-shell.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-local-bank-organization-info-shell",
            "styleUrls": [
                "./local-bank-organization-info-shell.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./local-bank-organization-info-shell.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-local-bank-organization-info-shell',\n  templateUrl: './local-bank-organization-info-shell.component.html',\n  styleUrls: ['./local-bank-organization-info-shell.component.scss']\n})\nexport class LocalBankOrganizationInfoShellComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./local-bank-organization-info-shell.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-local-bank-organization-info />\n"
        },
        {
            "name": "PageNotFoundComponent",
            "id": "component-PageNotFoundComponent-a3563972ce4c053a7987499a48b15969eb69e3c3ac3dd3fe7014bc847dd0c7539eb94a4a20ac6dc99c58e34e0cf9230a9664aff514e4f96bc6359a5ee81bdf03",
            "file": "src/app/shared/page-not-found/page-not-found.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-page-not-found",
            "styleUrls": [
                "./page-not-found.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./page-not-found.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.page-not-found-image {\r\n  max-width: 300px;\r\n  border-radius: 4px;\r\n}\r\n\r\n\r\n.not-found {\r\n  padding: 40px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-family: \"Roboto\";\r\n}\r\n\r\n\r\n.about button {\r\n  max-width: 100px;\r\n  margin-top: 30px;\r\n}\r\n",
                    "styleUrl": "./page-not-found.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"not-found\">\n\n  <img class=\"page-not-found-image mat-elevation-z10\"\n       src=\"/assets/images/http-error-404-not-found.png\">\n\n  <h1>Page Not Found</h1>\n  <p>Did you mistype something in the browser address bar?</p>\n\n</div>\n\n"
        },
        {
            "name": "UserEditComponent",
            "id": "component-UserEditComponent-02840dd3867bb1ee1ebe31f8e105e92b7ea88f472bac2d87c3c18a85ec6a9bb9bc9e198cf9e4704f781da1c8dd6577c9cd71856c88bfadc6726289d6e973130f",
            "file": "src/app/user/user-edit/user-edit.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user-edit",
            "styleUrls": [
                "./user-edit.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./user-edit.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "userTypes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "UserType[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "customValidatorService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CustomValidatorService",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123,
                        146
                    ]
                },
                {
                    "name": "filteredUserTypeList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<UserType[]>",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "displayAutocompleteValue",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setUserTypeList",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { UserType } from '../models/user-type.model';\r\nimport { Observable, debounceTime, map, startWith } from 'rxjs';\r\nimport { CustomValidatorService } from 'src/app/core/services/custom-validator.service';\r\nimport { autocompleteValidator } from 'src/app/core/validators/autocomplete.validator';\r\nimport { mobileNumberValidator } from 'src/app/core/validators/mobile-number.validator';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-edit',\r\n  templateUrl: './user-edit.component.html',\r\n  styleUrls: ['./user-edit.component.scss']\r\n})\r\nexport class UserEditComponent implements OnInit , OnChanges{\r\n\r\n  form!: FormGroup;\r\n\r\n  @Input() userTypes!: UserType[];\r\n\r\n\r\n  filteredUserTypeList!: Observable<UserType[]>;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    public readonly customValidatorService: CustomValidatorService\r\n    ) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.initForm();\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n\r\n    this.initForm();\r\n\r\n    if (this.userTypes.length > 0) {\r\n      this.userType.addValidators(autocompleteValidator(this.userTypes))\r\n      this.setUserTypeList()\r\n    }\r\n  }\r\n\r\n  setUserTypeList() {\r\n    console.log('=====',this.userType);\r\n    if (this.userType) {\r\n      this.filteredUserTypeList = this.userType.valueChanges.pipe(\r\n        startWith(''),\r\n        debounceTime(200),\r\n        map(value =>{\r\n          console.log('value====>>>',value)\r\n          console.log('typeof====>>>',typeof value)\r\n        return this.userTypes?.filter((option: UserType) => option?.value?.toLowerCase().includes(value.toString().toLowerCase())) ?? ''\r\n    }));\r\n    }\r\n  }\r\n\r\n\r\n\r\n  initForm() {\r\n    this.form = this.fb.group({\r\n      fullName: ['' , [Validators.required]],\r\n      emailAddress: ['', [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")]],\r\n      contactNo: ['', [Validators.required, Validators.pattern('[0-9]+'), mobileNumberValidator]],\r\n      gender: ['', [Validators.required]],\r\n      designation: ['', [Validators.required]],\r\n      userType: ['', [Validators.required]],\r\n      division: ['', [Validators.required]],\r\n      branch: ['', [Validators.required]],\r\n      status: ['', [Validators.required]],\r\n\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  displayAutocompleteValue(e: any): string {\r\n    return e ? e.value : '';\r\n  }\r\n\r\n\r\n\r\n  //\r\n\r\n  get fullName() {\r\n    return this.form.controls['fullName'];\r\n  }\r\n  get emailAddress() {\r\n    return this.form.controls['emailAddress'];\r\n  }\r\n\r\n  get contactNo() {\r\n    return this.form.controls['contactNo'];\r\n  }\r\n\r\n  get gender() {\r\n    return this.form.controls['gender'];\r\n  }\r\n\r\n  get designation() {\r\n    return this.form.controls['designation'];\r\n  }\r\n\r\n  get userType() {\r\n    return this.form.controls['userType'];\r\n  }\r\n\r\n  get division() {\r\n    return this.form.controls['division'];\r\n  }\r\n\r\n  get branch() {\r\n    return this.form.controls['branch'];\r\n  }\r\n\r\n  get status() {\r\n    return this.form.controls['status'];\r\n  }\r\n\r\n\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./user-edit.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "customValidatorService",
                        "type": "CustomValidatorService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "customValidatorService",
                        "type": "CustomValidatorService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "accessors": {
                "fullName": {
                    "name": "fullName",
                    "getSignature": {
                        "name": "fullName",
                        "type": "",
                        "returnType": "",
                        "line": 89
                    }
                },
                "emailAddress": {
                    "name": "emailAddress",
                    "getSignature": {
                        "name": "emailAddress",
                        "type": "",
                        "returnType": "",
                        "line": 92
                    }
                },
                "contactNo": {
                    "name": "contactNo",
                    "getSignature": {
                        "name": "contactNo",
                        "type": "",
                        "returnType": "",
                        "line": 96
                    }
                },
                "gender": {
                    "name": "gender",
                    "getSignature": {
                        "name": "gender",
                        "type": "",
                        "returnType": "",
                        "line": 100
                    }
                },
                "designation": {
                    "name": "designation",
                    "getSignature": {
                        "name": "designation",
                        "type": "",
                        "returnType": "",
                        "line": 104
                    }
                },
                "userType": {
                    "name": "userType",
                    "getSignature": {
                        "name": "userType",
                        "type": "",
                        "returnType": "",
                        "line": 108
                    }
                },
                "division": {
                    "name": "division",
                    "getSignature": {
                        "name": "division",
                        "type": "",
                        "returnType": "",
                        "line": 112
                    }
                },
                "branch": {
                    "name": "branch",
                    "getSignature": {
                        "name": "branch",
                        "type": "",
                        "returnType": "",
                        "line": 116
                    }
                },
                "status": {
                    "name": "status",
                    "getSignature": {
                        "name": "status",
                        "type": "",
                        "returnType": "",
                        "line": 120
                    }
                }
            },
            "templateData": "<div class=\"flex flex-1\" [formGroup]=\"form\">\r\n  <div class=\"m-6 p-4 rounded-md bg-white h-full w-full\">\r\n    <h2 class=\"my-2\">New User</h2>\r\n\r\n    <mat-divider></mat-divider>\r\n\r\n    <div class=\"grid grid-cols-2 gap-x-12 pt-6\">\r\n      <div class=\"flex items-center justify-between \">\r\n        <p class=\"text-lg font-medium after:content-['*'] after:ml-0.5 after:text-red-500\">Full Name</p>\r\n        <mat-form-field appearance=\"outline\" class=\"min-w-[70%]\">\r\n          <input aria-label=\"Full Name\" matInput type=\"text\" placeholder=\"Enter Full Name\" formControlName=\"fullName\"\r\n            class=\"text-base\">\r\n          <mat-error *ngIf=\"fullName.errors?.['required']\"> Full Name is mandatory.</mat-error>\r\n\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"flex items-center justify-between \">\r\n        <p class=\"text-lg font-medium font-medium after:content-['*'] after:ml-0.5 after:text-red-500\">Email Address</p>\r\n        <mat-form-field appearance=\"outline\" class=\"min-w-[70%]\">\r\n          <input aria-label=\"Email Address\" type=\"email\" matInput placeholder=\"Email Address\"\r\n            formControlName=\"emailAddress\" class=\"text-base\">\r\n          <mat-error *ngIf=\"emailAddress.errors?.['required']\"> Email Address is mandatory.</mat-error>\r\n\r\n          <mat-error *ngIf=\"emailAddress.errors?.['pattern']\"> Invalid Email Address.</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"flex items-center justify-between \">\r\n        <p class=\"text-lg font-medium after:content-['*'] after:ml-0.5 after:text-red-500\">Phone Number</p>\r\n        <mat-form-field appearance=\"outline\" class=\"min-w-[70%]\">\r\n          <input aria-label=\"Phone Number\" minlength=\"11\" maxlength=\"11\" type=\"text\" matInput placeholder=\"+880\"\r\n            formControlName=\"contactNo\" class=\"text-base\">\r\n\r\n          <mat-error *ngIf=\"contactNo.errors?.['required']\"> Mobile Number is mandatory.</mat-error>\r\n          <mat-error *ngIf=\"contactNo.errors?.['pattern']\"> Only numerical digits are allowed for mobile\r\n            number.</mat-error>\r\n          <mat-error *ngIf=\"!contactNo.errors?.['pattern'] && contactNo.errors?.['invalidMobileNumber']\">\r\n            {{contactNo.errors?.['invalidMobileNumber'].message}}\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"flex items-center justify-between \">\r\n        <p class=\"text-lg font-medium after:content-['*'] after:ml-0.5 after:text-red-500\">Gender</p>\r\n        <mat-form-field appearance=\"outline\" class=\"min-w-[70%]\">\r\n          <mat-select aria-label=\"Gender\" formControlName=\"gender\" placeholder=\"Please Select\">\r\n            <mat-option value=\"female\">Female</mat-option>\r\n            <mat-option value=\"male\">Male</mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"gender.errors?.['required']\">\r\n            Gender is mandatory.\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"flex items-center justify-between \">\r\n        <p class=\"text-lg font-medium after:content-['*'] after:ml-0.5 after:text-red-500\">Designation</p>\r\n        <mat-form-field appearance=\"outline\" class=\"min-w-[70%]\">\r\n          <input aria-label=\"Designation\" matInput type=\"text\" placeholder=\"Enter Designation\"\r\n            formControlName=\"designation\" class=\"text-base\">\r\n          <mat-error *ngIf=\"designation.errors?.['required']\">\r\n            Designation is mandatory.\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"flex items-center justify-between \">\r\n        <p class=\"text-lg font-medium after:content-['*'] after:ml-0.5 after:text-red-500\">User Type</p>\r\n        <mat-form-field appearance=\"outline\" class=\"min-w-[70%]\">\r\n          <input type=\"text\" placeholder=\"Pick one\" aria-label=\"User Type\" matInput formControlName=\"userType\"\r\n            [matAutocomplete]=\"userTypeAutoComplete\">\r\n          <mat-autocomplete autoActiveFirstOption #userTypeAutoComplete=\"matAutocomplete\"\r\n            [displayWith]=\"displayAutocompleteValue\">\r\n            <mat-option *ngFor=\"let element of filteredUserTypeList | async\" [value]=\"element\">\r\n              {{element.value}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n          <mat-error *ngIf=\"userType.errors?.['required']\">\r\n            User Type is mandatory.\r\n          </mat-error>\r\n          <mat-error *ngIf=\"userType.errors?.['invalidValue']\">\r\n            Please select valid value.\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"flex items-center justify-between \">\r\n        <p class=\"text-lg font-medium after:content-['*'] after:ml-0.5 after:text-red-500\">Division</p>\r\n        <mat-form-field appearance=\"outline\" class=\"min-w-[70%]\">\r\n          <mat-select aria-label=\"Division\" formControlName=\"division\" placeholder=\"Please Select\">\r\n\r\n          </mat-select>\r\n\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"flex items-center justify-between \">\r\n        <p class=\"text-lg font-medium after:content-['*'] after:ml-0.5 after:text-red-500\">Branch</p>\r\n        <mat-form-field appearance=\"outline\" class=\"min-w-[70%]\">\r\n          <mat-select aria-label=\"Branch\" formControlName=\"branch\" placeholder=\"Please Select\">\r\n\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"flex items-center justify-between \">\r\n        <p class=\"text-lg font-medium after:content-['*'] after:ml-0.5 after:text-red-500\">Status</p>\r\n        <mat-form-field appearance=\"outline\" class=\"min-w-[70%]\">\r\n          <mat-select aria-label=\"Status\" formControlName=\"status\" placeholder=\"Please Select\">\r\n\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "UserEditShellComponent",
            "id": "component-UserEditShellComponent-0cf9098ba6272a328b5fe4123dfe85d9f8551102144b954fb8c15803e750c1ba4157b18b06482456da95465ccb82933b36f130fdb43242675332e37710c8c573",
            "file": "src/app/user/user-edit-shell/user-edit-shell.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user-edit-shell",
            "styleUrls": [
                "./user-edit-shell.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./user-edit-shell.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "userTypes",
                    "defaultValue": "signal<UserType[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "getUserType",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnChanges, OnInit, SimpleChanges, signal } from '@angular/core';\nimport { UserType } from '../models/user-type.model';\n\n@Component({\n  selector: 'app-user-edit-shell',\n  templateUrl: './user-edit-shell.component.html',\n  styleUrls: ['./user-edit-shell.component.scss']\n})\nexport class UserEditShellComponent implements OnInit, OnChanges {\n\n  userTypes = signal<UserType[]>([]);\n\n  ngOnInit(): void {\n\n    this.getUserType()\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {}\n\n  getUserType() {\n    this.userTypes.set( [] )\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./user-edit-shell.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<app-user-edit\n[userTypes]=\"userTypes()\"\n/>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-0380eb99dc933726a298e8346c6bccd22e1b5cc04b104327b1338c34576989e47a18332184e6619667ea44cdcc8415094943c57e1610f717c21a145170f5c250",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-193d985836bfe88c92323bf1ac6ffb8cdc068c3b2a554cb5d8619167174554266eb3267067cd5f75d6b1d739ed2f4972a0d56f6870ae170e3e3bc390fba36953",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PageNotFoundComponent } from './shared/page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  {\n    path:'',\n    // redirectTo:'bank-acc-info/local-acc',\n    redirectTo:'users',\n    pathMatch:'full'\n  },\n  {\n    path:'bank-acc-info',\n    loadChildren: () => \"import('./bank-account/bank-account.module').then(m=>m.BankAccountModule)\"\n  },\n  {\n    path:'users',\n    loadChildren: () => \"import('./user/user.module').then(m=>m.UserModule)\"\n  },\n  {\n    path:'**',\n    component:PageNotFoundComponent\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BankAccountModule",
            "id": "module-BankAccountModule-c2fb5e48d2ee5da06f19ceca4f7fcd64a634b832cb897e9c80e4abaad91206063b889c919e76dd9d408f3a755b9305857d102c6536bf76d0c5dc9e9d4f222949",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/bank-account/bank-account.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BankAccountRoutingModule } from './bank-account-routing.module';\nimport { LocalBankAccInfoComponent } from './local-bank-acc-info/local-bank-acc-info.component';\nimport { LocalBankAccInfoShellComponent } from './local-bank-acc-info-shell/local-bank-acc-info-shell.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { LocalBankOrganizationInfoComponent } from './local-bank-organization-info/local-bank-organization-info.component';\nimport { LocalBankOrganizationInfoShellComponent } from './local-bank-organization-info-shell/local-bank-organization-info-shell.component';\n\n\n@NgModule({\n  declarations: [\n    LocalBankAccInfoComponent,\n    LocalBankAccInfoShellComponent,\n    LocalBankOrganizationInfoComponent,\n    LocalBankOrganizationInfoShellComponent\n  ],\n  imports: [\n    CommonModule,\n    BankAccountRoutingModule,\n    SharedModule,\n  ]\n})\nexport class BankAccountModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LocalBankAccInfoComponent"
                        },
                        {
                            "name": "LocalBankAccInfoShellComponent"
                        },
                        {
                            "name": "LocalBankOrganizationInfoComponent"
                        },
                        {
                            "name": "LocalBankOrganizationInfoShellComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "BankAccountRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BankAccountRoutingModule",
            "id": "module-BankAccountRoutingModule-cb79a86f80a04223aede4b8bfd2bb7dc5bd0f7dbb1168b06471420c9c76c5e70ea499709bdbcbcfe4d05471c2e745b555030c0f38d9d269d819ac6543db50da9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/bank-account/bank-account-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LocalBankAccInfoShellComponent } from './local-bank-acc-info-shell/local-bank-acc-info-shell.component';\n\nconst routes: Routes = [\n  {\n    path:'',\n    redirectTo:'bank-acc-info/local-acc',\n    pathMatch: 'full'\n  },\n  {\n    path:'local-acc',\n    component:LocalBankAccInfoShellComponent\n\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BankAccountRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-bc7cc9c8ed5e2c3e5ea4037acbd2ed117aee91ce5c701bb3c0280cf1a006d6b8aa4a335f92387abafb37a22eb614961eba1cbf31d851fb3344a25fb9c9c2025d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { RouterModule } from '@angular/router';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\n\n\n\n@NgModule({\n  declarations: [\n    PageNotFoundComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatButtonModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatStepperModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatSelectModule,\n    MatDividerModule,\n    MatAutocompleteModule,\n\n\n  ],\n  exports:[\n    MatButtonModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatStepperModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatSelectModule,\n    MatDividerModule,\n    MatAutocompleteModule\n  ]\n})\nexport class SharedModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PageNotFoundComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UserModule",
            "id": "module-UserModule-ec669105889e95624a719974b56491f1a62bb032e39af69801ad28dc84fc6602cfbf1fd7f31bf1fed11a8938f9e459f87a1760a8761b79b689c98d364c9ca1c5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/user/user.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { UserEditComponent } from './user-edit/user-edit.component';\nimport { UserEditShellComponent } from './user-edit-shell/user-edit-shell.component';\nimport { SharedModule } from '../shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    UserEditComponent,\n    UserEditShellComponent\n  ],\n  imports: [\n    CommonModule,\n    UserRoutingModule,\n    SharedModule\n  ]\n})\nexport class UserModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UserEditComponent"
                        },
                        {
                            "name": "UserEditShellComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "UserRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UserRoutingModule",
            "id": "module-UserRoutingModule-e620a1afdf62a4796e220e21122536838c9c97452719e432ccd083dd30678c749b2fe0ea0d3fcc3b6db84e7311e1128aa58803b204216ca156ad21b7aeda7350",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/user/user-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UserEditShellComponent } from './user-edit-shell/user-edit-shell.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserEditShellComponent,\n\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "branchList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/bank-account/test-data/test-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Branch[]",
                "defaultValue": "[\r\n  {\r\n    \"id\": \"1\",\r\n    \"value\": \"Dhaka\"\r\n  },\r\n  {\r\n    \"id\": \"2\",\r\n    \"value\": \"Mymensingh\"\r\n  }\r\n\r\n\r\n]"
            },
            {
                "name": "EmptyForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/bank-account/local-bank-organization-info/local-bank-organization-info.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n  },\r\n}"
            },
            {
                "name": "EmptyForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/user/user-edit/user-form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n  },\r\n}"
            },
            {
                "name": "MainForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/bank-account/local-bank-organization-info/local-bank-organization-info.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    branchList: branchList,\r\n\r\n  },\r\n}"
            },
            {
                "name": "MainForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/user/user-edit/user-form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    userTypes: userTypes\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/bank-account/local-bank-organization-info/local-bank-organization-info.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<LocalBankOrganizationInfoComponent>",
                "defaultValue": "{\r\n  component: LocalBankOrganizationInfoComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        BrowserAnimationsModule,\r\n        MatButtonModule,\r\n        ReactiveFormsModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatAutocompleteModule,\r\n        MatDividerModule,\r\n        FormsModule\r\n      ],\r\n    })\r\n  ],\r\n  render: (args: LocalBankOrganizationInfoComponent) => ({\r\n    props: {\r\n      ...args,\r\n\r\n    },\r\n  }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/user/user-edit/user-form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<UserEditComponent>",
                "defaultValue": "{\r\n  component: UserEditComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        BrowserAnimationsModule,\r\n        MatButtonModule,\r\n        ReactiveFormsModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatAutocompleteModule,\r\n        FormsModule,\r\n        MatSelectModule,\r\n        MatDividerModule,\r\n\r\n      ],\r\n    })\r\n  ],\r\n  render: (args: UserEditComponent) => ({\r\n    props: {\r\n      ...args,\r\n    },\r\n  }),\r\n}"
            },
            {
                "name": "mobileNumberValidator",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/validators/mobile-number.validator.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ValidatorFn",
                "defaultValue": "(control: AbstractControl): ValidationErrors | null => {\r\n  // console.log(control)\r\n\r\n  if (control.value?.length == 0) return null;\r\n\r\n  if(control.value?.length < 11) return { invalidMobileNumber: { message: `Mobile Number must be 11 characters. But it is only has ${control.value?.length} characters.` } };\r\n  if(!control.value?.startsWith('01')) return { invalidMobileNumber: { message: `Invalid Mobile Number. Must start with 01` } };\r\n\r\n  return null;\r\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
            },
            {
                "name": "userTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/user/test-data/test-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "UserType[]",
                "defaultValue": "[\r\n    {\r\n      \"id\": \"1\",\r\n      \"value\": \"Admin\"\r\n    },\r\n    {\r\n      \"id\": \"2\",\r\n      \"value\": \"User\"\r\n    },\r\n    {\r\n      \"id\": \"3\",\r\n      \"value\": \"Viewer\"\r\n    }\r\n  ]"
            }
        ],
        "functions": [
            {
                "name": "autocompleteValidator",
                "file": "src/app/core/validators/autocomplete.validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "options",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ValidatorFn",
                "jsdoctags": [
                    {
                        "name": "options",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<LocalBankOrganizationInfoComponent>",
                "file": "src/app/bank-account/local-bank-organization-info/local-bank-organization-info.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<UserEditComponent>",
                "file": "src/app/user/user-edit/user-form.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/bank-account/test-data/test-data.ts": [
                {
                    "name": "branchList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/bank-account/test-data/test-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Branch[]",
                    "defaultValue": "[\r\n  {\r\n    \"id\": \"1\",\r\n    \"value\": \"Dhaka\"\r\n  },\r\n  {\r\n    \"id\": \"2\",\r\n    \"value\": \"Mymensingh\"\r\n  }\r\n\r\n\r\n]"
                }
            ],
            "src/app/bank-account/local-bank-organization-info/local-bank-organization-info.stories.ts": [
                {
                    "name": "EmptyForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/bank-account/local-bank-organization-info/local-bank-organization-info.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n  },\r\n}"
                },
                {
                    "name": "MainForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/bank-account/local-bank-organization-info/local-bank-organization-info.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    branchList: branchList,\r\n\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/bank-account/local-bank-organization-info/local-bank-organization-info.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<LocalBankOrganizationInfoComponent>",
                    "defaultValue": "{\r\n  component: LocalBankOrganizationInfoComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        BrowserAnimationsModule,\r\n        MatButtonModule,\r\n        ReactiveFormsModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatAutocompleteModule,\r\n        MatDividerModule,\r\n        FormsModule\r\n      ],\r\n    })\r\n  ],\r\n  render: (args: LocalBankOrganizationInfoComponent) => ({\r\n    props: {\r\n      ...args,\r\n\r\n    },\r\n  }),\r\n}"
                }
            ],
            "src/app/user/user-edit/user-form.stories.ts": [
                {
                    "name": "EmptyForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/user/user-edit/user-form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n  },\r\n}"
                },
                {
                    "name": "MainForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/user/user-edit/user-form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    userTypes: userTypes\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/user/user-edit/user-form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<UserEditComponent>",
                    "defaultValue": "{\r\n  component: UserEditComponent,\r\n  excludeStories: /.*Data$/,\r\n  tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [\r\n        CommonModule,\r\n        BrowserAnimationsModule,\r\n        MatButtonModule,\r\n        ReactiveFormsModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatAutocompleteModule,\r\n        FormsModule,\r\n        MatSelectModule,\r\n        MatDividerModule,\r\n\r\n      ],\r\n    })\r\n  ],\r\n  render: (args: UserEditComponent) => ({\r\n    props: {\r\n      ...args,\r\n    },\r\n  }),\r\n}"
                }
            ],
            "src/app/core/validators/mobile-number.validator.ts": [
                {
                    "name": "mobileNumberValidator",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/validators/mobile-number.validator.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn",
                    "defaultValue": "(control: AbstractControl): ValidationErrors | null => {\r\n  // console.log(control)\r\n\r\n  if (control.value?.length == 0) return null;\r\n\r\n  if(control.value?.length < 11) return { invalidMobileNumber: { message: `Mobile Number must be 11 characters. But it is only has ${control.value?.length} characters.` } };\r\n  if(!control.value?.startsWith('01')) return { invalidMobileNumber: { message: `Invalid Mobile Number. Must start with 01` } };\r\n\r\n  return null;\r\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
                }
            ],
            "src/app/user/test-data/test-data.ts": [
                {
                    "name": "userTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/user/test-data/test-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserType[]",
                    "defaultValue": "[\r\n    {\r\n      \"id\": \"1\",\r\n      \"value\": \"Admin\"\r\n    },\r\n    {\r\n      \"id\": \"2\",\r\n      \"value\": \"User\"\r\n    },\r\n    {\r\n      \"id\": \"3\",\r\n      \"value\": \"Viewer\"\r\n    }\r\n  ]"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/core/validators/autocomplete.validator.ts": [
                {
                    "name": "autocompleteValidator",
                    "file": "src/app/core/validators/autocomplete.validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "options",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ValidatorFn",
                    "jsdoctags": [
                        {
                            "name": "options",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/bank-account/local-bank-organization-info/local-bank-organization-info.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<LocalBankOrganizationInfoComponent>",
                    "file": "src/app/bank-account/local-bank-organization-info/local-bank-organization-info.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/app/user/user-edit/user-form.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<UserEditComponent>",
                    "file": "src/app/user/user-edit/user-form.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "redirectTo": "users",
                        "pathMatch": "full"
                    },
                    {
                        "path": "bank-acc-info",
                        "loadChildren": "./bank-account/bank-account.module#BankAccountModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/bank-account/bank-account-routing.module.ts",
                                        "module": "BankAccountRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "redirectTo": "bank-acc-info/local-acc",
                                                "pathMatch": "full"
                                            },
                                            {
                                                "path": "local-acc",
                                                "component": "LocalBankAccInfoShellComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "BankAccountModule"
                            }
                        ]
                    },
                    {
                        "path": "users",
                        "loadChildren": "./user/user.module#UserModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/user/user-routing.module.ts",
                                        "module": "UserRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "UserEditShellComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "UserModule"
                            }
                        ]
                    },
                    {
                        "path": "**",
                        "component": "PageNotFoundComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/bank-account/local-bank-acc-info-shell/local-bank-acc-info-shell.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LocalBankAccInfoShellComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/bank-account/local-bank-acc-info/local-bank-acc-info.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LocalBankAccInfoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/bank-account/local-bank-organization-info-shell/local-bank-organization-info-shell.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LocalBankOrganizationInfoShellComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/bank-account/local-bank-organization-info/local-bank-organization-info.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LocalBankOrganizationInfoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/bank-account/local-bank-organization-info/local-bank-organization-info.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EmptyForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/bank-account/local-bank-organization-info/local-bank-organization-info.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MainForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/bank-account/local-bank-organization-info/local-bank-organization-info.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/bank-account/models/branch.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Branch",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/bank-account/test-data/test-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "branchList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/models/ddl-type.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DdlType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/custom-validator.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CustomValidatorService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/validators/autocomplete.validator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "autocompleteValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/validators/mobile-number.validator.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mobileNumberValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/page-not-found/page-not-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageNotFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/user/models/user-type.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserType",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/user/test-data/test-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "userTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/user/user-edit-shell/user-edit-shell.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserEditShellComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/user/user-edit/user-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/user/user-edit/user-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EmptyForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/user/user-edit/user-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MainForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/user/user-edit/user-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}